{"version":3,"sources":["Utility/CookieManager.js","Utility/ChartDataManager.js","Utility/DataRequestManager.js","Component/CardComponent/CardComponent.js","Component/CardRowComponent/CardRowComponent.js","Component/UserCard/UserCard.js","Component/ChartComponent/ChartComponent.js","Component/Dashboard/Dashboard.js","Component/App/App.js","serviceWorker.js","index.js"],"names":["cookies","Cookies","SetCookie","userData","option","maxAge","Object","entries","key","value","set","DeleteCookie","fields","forEach","field","remove","hasCookie","obj","haslogin","get","setReloadCookie","currTime","Date","getTime","hasReloadCookie","parseInt","extractElement","data","element","map","idx","extractDate","getDate","getMonth","getFullYear","require","dataValues","getRequestHeaders","accessToken","params","process","headers","getAggregatedDataBody","dataType","endTime","getAggregateData","body","a","axios","post","req","baseObj","getWeeklyData","requestParameters","callBack","initialState","state","promises","present","length","i","push","type","then","resp","bucket","dataset","point","val","extract","Math","ceil","title","Promise","all","CardComponent","props","Card","className","style","backgroundColor","color","Body","Title","Subtitle","CardRowComponent","selected","aggData","Calories","Heart","Move","Steps","CardDeck","id","UserCard","user","name","textStyle","ChartComponent","options","chart","text","credits","xAxis","categories","crosshair","labels","yAxis","min","gridLineWidth","legend","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","stacking","colors","series","highcharts","Highcharts","Dashboard","console","log","useState","weekData","setWeekData","requestHeaders","timeRightNow","Container","Jumbotron","Row","Col","CLIENT_ID","App","setUser","useEffect","cookieObject","Navbar","collapseOnSelect","expand","Brand","href","Nav","clientId","buttonText","onLogoutSuccess","response","onFailure","alert","onSuccess","profileObj","cookiePolicy","responseType","scope","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.46d252ab.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\n// for authentication persistance\nexport const SetCookie = (userData) => {\n    const option = {maxAge: 3600};\n    for(const [key, value] of Object.entries(userData)) {\n        cookies.set(key, value, option);\n    };\n}\n\nexport const DeleteCookie = (fields) => {\n    fields.forEach((field) => {\n        cookies.remove(field);\n    });\n}\n\nexport const hasCookie = () => {\n    const fields = ['accessToken', 'email', 'givenName', 'familyName', 'imageUrl', 'name', 'googleId'];\n    const obj = {\n        haslogin: false\n    };\n    if (cookies.get('accessToken')) {\n        obj.haslogin = true;\n        fields.forEach((field) => {\n            obj[field] = cookies.get(field) || 'lorem ipsum'\n        });\n    }\n    return obj;\n}\n\n// For saving the reload data for an hour\nexport const setReloadCookie = () => {\n    const currTime = new Date();\n    cookies.set('lastReload', currTime.getTime(), {\n        maxAge: 3600\n    });\n}\n\nexport const hasReloadCookie = () => {\n    if (cookies.get('lastReload')) {\n        return {\n            'present': true,\n            'date': parseInt(cookies.get('lastReload'))\n        };\n    }\n    return {\n        'present': false\n    };\n}\n","export const extractElement = (data, element) => {\n    return data.map((idx) => {\n        return idx[element];\n    })\n}\n\nexport const extractDate = (data) => {\n    return data.map((idx) => {\n        var x = `${idx.Date.getDate()}-${idx.Date.getMonth()}-${idx.Date.getFullYear()}`;\n        return x;\n    })\n}","import axios from 'axios';\nconst { setReloadCookie, hasReloadCookie } = require('./CookieManager.js');\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst dataValues = [\n  {\n    \"title\": \"Calories\",\n    \"type\": \"com.google.calories.expended\"\n  },\n  {\n    \"title\": \"Heart\",\n    \"type\": \"com.google.heart_minutes\"\n  },\n  {\n    \"title\": \"Move\",\n    \"type\": \"com.google.active_minutes\"\n  },\n  {\n    \"title\": \"Steps\",\n    \"type\": \"com.google.step_count.delta\"\n  },\n];\n// We need to get aggregated data *on that particular day for now*\n\n// Provide request headers to be attached with each function call\nexport const getRequestHeaders = (accessToken) => {\n  const requestHeaderBody = {\n    params: {\n      'key': API_KEY\n    },\n    headers: {\n      'Authorization': `Bearer ${accessToken}`,\n      'Accept': 'application/json'\n    }\n  }\n  return requestHeaderBody;\n}\n\nexport const getAggregatedDataBody = (dataType, endTime) => {\n  const requestBody = {\n    \"aggregateBy\": [{\n      \"dataTypeName\": dataType\n    }],\n    \"bucketByTime\": {\n      \"durationMillis\": 86400000\n    },\n    \"endTimeMillis\": endTime,\n    \"startTimeMillis\": endTime - (7*86400000)\n  }\n  return requestBody;\n}\n\nexport const getAggregateData = async (body, headers) => {\n  const req = await axios.post('https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate', body, headers);\n  return req;\n}\n\n// we need to return [{Today}, {Yesterday} .... {7 days back}]\n// Each object has : {\"Calories\" : value, \"Heart\": value ... , \"Date\": }\nconst baseObj = {\n  \"Calories\": 0,\n  \"Heart\": 0,\n  \"Move\": 0,\n  \"Steps\": 0\n};\n\nexport const getWeeklyData = async(endTime, requestParameters, callBack, initialState) => {\n  let state = [];\n  let promises = [];\n  const hasCookie = hasReloadCookie();\n  if (!hasCookie.present || initialState.length === 0) {\n    for(var i=6; i>=0; i--) {\n      var currTime = new Date(endTime - i*86400000);\n      state.push({\n        ...baseObj,\n        \"Date\": currTime\n      })\n    }\n    dataValues.forEach((element) => {\n      let body = getAggregatedDataBody(element.type, endTime);\n      promises.push(\n        axios.post('https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate', body, requestParameters)\n          .then((resp) => {\n            // now, each data bucket represents exactly one day\n            for(let idx=0; idx<7; idx++) {\n              resp.data.bucket[idx].dataset[0].point.forEach((point) => {\n                point.value.forEach((val) => {\n                  let extract = val['intVal'] || Math.ceil(val['fpVal']) || 0;\n                  state[idx][element.title] += extract;\n                })\n              })\n            }\n          }\n        )\n      )\n    })\n    Promise.all(promises).then(() => {\n      callBack(state);\n    })\n    setReloadCookie();\n  }\n}","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst CardComponent = (props) => {\n  const style = {\n    backgroundColor: '#272727',\n    color: '#ffffff'\n  };\n  return (\n    <Card  className=\"mb-2 text-center\" style={style}>\n      <Card.Body>\n        <Card.Title>\n          {props.element.title}\n        </Card.Title>\n        <Card.Subtitle>\n          {props.element.value}\n        </Card.Subtitle>\n      </Card.Body>\n    </Card>\n  );\n}\nexport default CardComponent;\n","import React from 'react';\nimport { CardDeck } from 'react-bootstrap';\nimport CardComponent from '../CardComponent/CardComponent.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst CardRowComponent = (props) => {\n  // calculate aggregated data\n  let selected = props.selected;\n  if (selected.length === 0) {\n    selected = [0,1,2,3,4,5,6];\n  }\n  const data = props.data;\n  // aggData = {\"Heart\": __, \"Move\": ___ ...}\n  const aggData = {\n    Calories: 0,\n    Heart: 0,\n    Move: 0,\n    Steps: 0\n  };\n  if (data.length > 0) {\n    selected.forEach((idx) => {\n      aggData.Calories += data[idx].Calories;\n      aggData.Heart += data[idx].Heart;\n      aggData.Move += data[idx].Move;\n      aggData.Steps += data[idx].Steps;\n    })\n  }\n\n  return (\n    <div>\n      <CardDeck>\n          <CardComponent element={{title: \"Calories Burnt\", value: aggData.Calories, id: 0}} />\n          <CardComponent element={{title: \"Heart Points\", value: aggData.Heart, id:1}} />\n          <CardComponent element={{title: \"Move Minutes\", value: aggData.Move, id:2}} />\n          <CardComponent element={{title: \"Steps Travelled\", value: aggData.Steps, id:3}} />\n      </CardDeck>\n    </div>\n  );\n}\n\nexport default CardRowComponent;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst UserCard = (props) => {\n  const style = {\n    backgroundColor: '#272727',\n    color: '#ffffff'\n  };\n  return (\n    <Card  className=\"mb-2 text-center\" style={style}>\n      <Card.Body>\n        <Card.Title>\n          Welcome {props.user.name}\n        </Card.Title>\n        <Card.Subtitle>\n          Your Google Fit Stats are aggregated below!\n        </Card.Subtitle>\n      </Card.Body>\n    </Card>\n  );\n}\nexport default UserCard;\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nconst { extractElement, extractDate } = require('../../Utility/ChartDataManager.js');\n\nconst textStyle = {\n  color: '#ffffff'\n}\nconst ChartComponent = (props) => {\n  const options = {\n    chart: {\n      type: 'column',\n      backgroundColor: '#272727'\n    },\n    title: {\n      text: 'Your Weekly Fitness Data',\n      style: textStyle\n    },\n    credits:{\n      text: ''\n    },\n    xAxis: {\n      categories: extractDate(props.data),\n      crosshair: true,\n      labels: {\n        style: textStyle\n      }\n    },\n    yAxis: {\n      min: 0,\n      gridLineWidth: 0\n    },\n    legend: {\n      backgroundColor: '#A9A9A9'\n    },\n    tooltip: {\n      backgroundColor: '#272727',\n      headerFormat: '<span style=\"font-size:10px; color:white\">{point.key}</span><table>',\n      pointFormat: '<tr><td style=\"color:{series.color};padding:0\"><b>{series.name}: </b></td>' +\n        '<td style=\"padding:0; color:white\"><b>{point.y} units</b></td></tr>',\n      footerFormat: '</table>',\n      shared: true,\n      useHTML: true\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n        stacking: 'percent'\n      }\n    },\n    colors : ['#ff3d00', '#00e676', '#651fff', '#00e5ff'],\n    series: [{\n      name: 'Calories Burnt',\n      data: extractElement(props.data, 'Calories')\n  \n    }, {\n      name: 'Heart Points',\n      data: extractElement(props.data, 'Heart')\n  \n    }, {\n      name: 'Move Minutes',\n      data: extractElement(props.data, 'Move')\n  \n    }, {\n      name: 'Steps',\n      data: extractElement(props.data, 'Steps')\n  \n    }]\n  }\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  )\n};\n\nexport default ChartComponent","import React, { useState } from 'react';\nimport { Container, Jumbotron, Row, Col } from 'react-bootstrap';\nimport CardRowComponent from '../CardRowComponent/CardRowComponent.js';\nimport UserCard from '../UserCard/UserCard.js';\nimport ChartComponent from '../ChartComponent/ChartComponent.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst { getRequestHeaders, getWeeklyData } = require('../../Utility/DataRequestManager.js');\n\nconst Dashboard = (props) => {\n  // fetch weekly data\n  const accessToken = props.user.accessToken;\n  console.log('props.user', props.user)\n  console.log('props.user.accessToken', props.user.accessToken)\n  const [weekData, setWeekData] = useState([]);\n  // let weekData = [];\n\n  let selected = [0,1,2,3,4,5,6];\n  const callBack = (state) => {\n    setWeekData(state);\n  }\n  if (props.user.haslogin) {\n    const requestHeaders = getRequestHeaders(accessToken);\n    const timeRightNow = new Date().getTime();\n    getWeeklyData(timeRightNow, requestHeaders, callBack, weekData);\n  }\n\n  return (\n    <div>\n      <Container className=\"p-3\">\n        <Jumbotron style={{backgroundColor:\"#272727\", color:'#ffffff'}}>\n          <h1 className=\"header\">Welcome To Fit Me Up Visualizer</h1>\n          {props.user.haslogin ?\n            null : <div>\n              <h3> Please login</h3>\n            </div>\n          }\n        </Jumbotron>\n        {props.user.haslogin ?\n          <div>\n            <Row>\n              <Col>\n                <UserCard user={props.user}/>\n              </Col>\n            </Row>\n            <Row>\n              <div>\n                <br></br>\n              </div>\n            </Row>\n            <Row>\n              <Col>\n                <CardRowComponent user={props.user} selected={selected} data={weekData}/>\n              </Col>\n            </Row>\n            <Row>\n              <div>\n                <br></br>\n              </div>\n            </Row>\n            <Row>\n              <Col>\n                <ChartComponent data={weekData} selected={selected}/>\n              </Col>\n            </Row>\n          </div> : null\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport Dashboard  from '../Dashboard/Dashboard';\nimport './App.css';\n\nconst { SetCookie, DeleteCookie, hasCookie } = require('../../Utility/CookieManager.js');\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n\nconst App = () => { \n  const [user, setUser] = useState({ haslogin: false, accessToken: '' });\n\n  useEffect(() => {\n    const cookieObject = hasCookie();\n    if (cookieObject.haslogin) {\n      setUser({\n        ...cookieObject\n      });\n    }\n  }, []);\n  function login(response) {\n    if (response.accessToken) {\n      setUser({\n        ...response.profileObj,\n        haslogin: true,\n        accessToken: response.accessToken\n      })\n    }\n    SetCookie({\n      ...response.profileObj,\n      accessToken: response.accessToken\n    });\n  }\n\n  function logout(response) {\n    setUser({ haslogin: false, accessToken: '' });\n    DeleteCookie(['accessToken', 'email', 'givenName', 'familyName', 'imageUrl', 'name', 'googleId']);\n  }\n\n  function handleLoginFailure(response) {\n    alert('Failed to log in')\n  }\n  function handleLogoutFailure(response) {\n    alert('Failed to log out')\n  }\n  return (\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" style={{backgroundColor: '#272727'}}>\n        <Navbar.Brand href=\"#home\" style={{color: '#ffffff'}}>Fit Me Up</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n        </Nav>\n        <Nav>\n          {user.haslogin ?\n            <GoogleLogout\n              clientId={CLIENT_ID}\n              buttonText='Logout'\n              onLogoutSuccess={logout}\n              onFailure={handleLogoutFailure}\n            >\n            </GoogleLogout> : <GoogleLogin\n              clientId={CLIENT_ID}\n              buttonText='Login'\n              onSuccess={login}\n              onFailure={handleLoginFailure}\n              cookiePolicy={'single_host_origin'}\n              responseType='code,token'\n              scope = { 'https://www.googleapis.com/auth/fitness.activity.read https://www.googleapis.com/auth/fitness.location.read'}\n            />\n          }\n        </Nav>\n      </Navbar>\n      <Dashboard user={user}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}